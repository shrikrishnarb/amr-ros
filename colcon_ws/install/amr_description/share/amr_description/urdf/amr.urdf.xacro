<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" xmlns="http://www.ros.org/schema" name="amr_bot">

  <!-- Namespace argument -->
  <xacro:arg name="namespace" default="agv1"/>

  <!-- Materials -->
  <material name="white"><color rgba="1 1 1 1"/></material>
  <material name="orange"><color rgba="1 0.3 0.1 1"/></material>
  <material name="blue"><color rgba="0.2 0.2 1 1"/></material>
  <material name="black"><color rgba="0 0 0 1"/></material>

  <!-- Base Footprint Link -->
  <link name="$(arg namespace)/base_footprint"/>

  <!-- Base Link -->
  <link name="$(arg namespace)/base_link"/>

  <!-- Joint to connect base_footprint to base_link -->
  <joint name="base_footprint_to_base_link" type="fixed">
    <parent link="$(arg namespace)/base_footprint"/>
    <child link="$(arg namespace)/base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <!-- Chassis -->
  <link name="$(arg namespace)/chassis">
    <visual>
      <origin xyz="0.15 0 0.075" rpy="0 0 0"/>
      <geometry><box size="0.3 0.3 0.15"/></geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin xyz="0.15 0 0.075" rpy="0 0 0"/>
      <geometry><box size="0.3 0.3 0.15"/></geometry>
    </collision>
    <inertial>
      <mass value="5.0"/>
      <origin xyz="0.15 0 0.075" rpy="0 0 0"/>
      <inertia ixx="0.00140625" ixy="0.0" ixz="0.0" iyy="0.00140625" iyz="0.0" izz="0.00225"/>
    </inertial>
  </link>

  <joint name="chassis_joint" type="fixed">
    <parent link="$(arg namespace)/base_link"/>
    <child link="$(arg namespace)/chassis"/>
    <origin xyz="-0.1 0 0" rpy="0 0 0"/>
  </joint>

  <!-- Left Wheel -->
  <link name="$(arg namespace)/left_wheel">
    <visual>
      <geometry><cylinder length="0.04" radius="0.05"/></geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry><cylinder length="0.04" radius="0.05"/></geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1.04167e-04" ixy="0.0" ixz="0.0" iyy="1.04167e-04" iyz="0.0" izz="1.25e-04"/>
    </inertial>
  </link>

  <joint name="left_wheel_joint" type="continuous">
    <parent link="$(arg namespace)/base_link"/>
    <child link="$(arg namespace)/left_wheel"/>
    <origin xyz="0 0.175 0" rpy="-1.5708 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- Right Wheel -->
  <link name="$(arg namespace)/right_wheel">
    <visual>
      <geometry><cylinder length="0.04" radius="0.05"/></geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry><cylinder length="0.04" radius="0.05"/></geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1.04167e-04" ixy="0.0" ixz="0.0" iyy="1.04167e-04" iyz="0.0" izz="1.25e-04"/>
    </inertial>
  </link>

  <joint name="right_wheel_joint" type="continuous">
    <parent link="$(arg namespace)/base_link"/>
    <child link="$(arg namespace)/right_wheel"/>
    <origin xyz="0 -0.175 0" rpy="1.5708 0 0"/>
    <axis xyz="0 0 -1"/>
  </joint>

  <!-- Caster Wheel -->
  <link name="$(arg namespace)/caster_wheel">
    <visual>
      <geometry><sphere radius="0.05"/></geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry><sphere radius="0.05"/></geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="2.0e-04" ixy="0.0" ixz="0.0" iyy="2.0e-04" iyz="0.0" izz="2.0e-04"/>
    </inertial>
  </link>

  <joint name="caster_wheel_joint" type="fixed">
    <parent link="$(arg namespace)/chassis"/>
    <child link="$(arg namespace)/caster_wheel"/>
    <origin xyz="0.24 0 0" rpy="0 0 0"/>
  </joint>

  <!-- LIDAR -->
  <link name="$(arg namespace)/lidar_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.03" length="0.05"/>
      </geometry>
      <material name="black"/>
    </visual>
  </link>

  <joint name="base_to_lidar" type="fixed">
    <parent link="$(arg namespace)/base_link"/>
    <child link="$(arg namespace)/lidar_link"/>
    <origin xyz="0.14 0 0.173" rpy="0 0 0"/>
  </joint>

  <!-- Gazebo Elements -->
  <gazebo reference="$(arg namespace)/left_wheel">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="$(arg namespace)/right_wheel">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="$(arg namespace)/caster_wheel">
    <mu1>0.001</mu1>
    <mu2>0.001</mu2>
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="$(arg namespace)/lidar_link">
    <sensor type="ray" name="lidar_sensor">
      <update_rate>10</update_rate>
      <pose>0.14 0 0.173 0 0 0</pose>
      <visualize>true</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.5708</min_angle>
            <max_angle>1.5708</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <namespace>$(arg namespace)</namespace>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frameName>$(arg namespace)/lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin name="diff_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <namespace>$(arg namespace)</namespace>
      </ros>
      <update_rate>50.0</update_rate>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.35</wheel_separation>
      <wheel_diameter>0.1</wheel_diameter>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      <max_wheel_torque>200</max_wheel_torque>
      <command_topic>/cmd_vel</command_topic>
      <odometry_frame>world</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <publish_odom>true</publish_odom>
      <publish_tf>true</publish_tf>
      <publish_odom_tf>false</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
    </plugin>
    <plugin name="ground_truth_plugin" filename="libgazebo_ros_p3d.so">
      <ros>
        <namespace>$(arg namespace)</namespace>
        <remapping>odom:=ground_truth</remapping>
      </ros>
      <frame_name>world</frame_name>
      <body_name>$(arg namespace)/base_footprint</body_name>
      <update_rate>30.0</update_rate>
    </plugin>
  </gazebo>

</robot>
